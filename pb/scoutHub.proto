syntax = "proto3";

option go_package = "github.com/pedroaston/contentpubsub/pb";

package contentpubsub.pb;

service ScoutHub {
    rpc Subscribe(Subscription) returns (Ack) {}
    rpc Publish(Event) returns (Ack) {}
    rpc Notify(Event) returns (Ack) {}
    rpc UpdateBackup(Update) returns (Ack) {}

    // Fast-Delivery
    rpc PremiumSubscribe(PremiumSubscription) returns (Ack) {}
    rpc PremiumPublish(PremiumEvent) returns (Ack) {}
    rpc RequestHelp(HelpRequest) returns (Ack) {}
    rpc DelegateSubToHelper(MinimalSubData) returns (Ack) {}
}

// Acknowledge response
message Ack {
    bool state = 1;
    string info = 2;
}

message Subscription {
    string peerID = 1;
    string predicate = 2;
    string rvId = 3;
    map<int32, string> backups = 4;
}

message Event { 
    string predicate = 1;
    string rvId = 2;
    string event = 3;
    string lastHop = 4;
    string backup = 5;
}

message Update {
    string sender = 1;
    string route = 2;
    string routeAddr = 3;
    string predicate = 4;
}

// Fast-Delivery

message MulticastGroupID {
    string ownerID = 1;
    string predicate = 2;
}

message PremiumEvent {
    MulticastGroupID groupID = 1;
    string event = 2;
}

message PremiumSubscription {
    string addr = 1;
    string ownPredicate = 2;
    string pubPredicate = 3;
}

message HelpRequest {
    MulticastGroupID groupID = 1;
    map<int32, MinimalSubData> subs = 2;
}

message MinimalSubData {
    string predicate = 1;
    string addr = 2;
}